version: "3.9"
services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports: ["2181:2181"]
  kafka:
    image: bitnami/kafka:3.7
    depends_on: [zookeeper]
    ports: ["9092:9092", "9094:9094"]
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes: [ "mongo_data:/data/db" ]

  ingestion-api:
    build:
      context: .
      dockerfile: ingestion-api/Dockerfile
    env_file: .env
    depends_on: [kafka, mongo]
    ports: ["8001:8000"]  # API and metrics on same port

  aggregator-worker:
    build:
      context: .
      dockerfile: aggregator-worker/Dockerfile
    env_file: .env
    depends_on: [kafka, mongo]
    ports: ["8003:8000"]  # Prometheus metrics port

  alerts-worker:
    build:
      context: .
      dockerfile: alerts-worker/Dockerfile
    env_file: .env
    depends_on: [kafka, mongo]
    ports: ["8004:8000"]  # Prometheus metrics port

  dashboard-api:
    build:
      context: .
      dockerfile: dashboard-api/Dockerfile
    env_file: .env
    depends_on: [mongo]
    ports: ["8002:8000"]  # API and metrics on same port

volumes:
  mongo_data:
