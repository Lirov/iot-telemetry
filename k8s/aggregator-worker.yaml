apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator-worker
  namespace: iot
spec:
  replicas: 2
  selector: { matchLabels: { app: aggregator-worker } }
  template:
    metadata: { labels: { app: aggregator-worker } }
    spec:
      containers:
        - name: aggregator
          image: liro/aggregator-worker:latest
          ports: 
            - {containerPort: 8000}  # Prometheus metrics port
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka:9092"
            - name: MONGO_URL
              value: "mongodb://mongodb.default:27017"
            - name: TELEMETRY_TOPIC
              value: "telemetry.raw"
            - name: DLQ_TOPIC
              value: "telemetry.dlq"
            - name: MAX_RETRIES
              value: "3"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet: { path: /metrics, port: 8000 }
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet: { path: /metrics, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: aggregator-worker
  namespace: iot
spec:
  selector: { app: aggregator-worker }
  ports:
    - port: 8000
      targetPort: 8000
      name: metrics
